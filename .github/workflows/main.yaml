name: main

on:
  pull_request:
  push:
    branches: [master]

jobs:
  tflint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: reviewdog/action-tflint@master
      with:
        github_token: ${{ secrets.github_token }}

  build_image_with_gpr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          # Use GitHub Package Registry (GPR) because it's the fastest registry for GitHub Actions.
          echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin

          # Docker accepts only lowercase name, prepare it.
          export image=$(echo "docker.pkg.github.com/$GITHUB_REPOSITORY/test-all" | awk '{print tolower($0)}')

          # Pull before build in order to utilize Docker's caching mechanism (skip some unchanged layers).
          docker pull "$image" || true
          docker build . -t this --cache-from="$image"
          docker tag this "$image" && docker push "$image" || true
      - uses: paloaltonetworks/terraform-google-vmseries-modules
  pre-commit:
    runs-on: ubuntu-latest
    # container: node:10.16-jessie
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - run: |
        curl -L "$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | grep -o -E "https://.+?-linux-amd64")" > terraform-docs && chmod +x terraform-docs && sudo mv terraform-docs /usr/bin/
        curl -L "$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E "https://.+?_linux_amd64.zip")" > tflint.zip && unzip tflint.zip && rm tflint.zip && sudo mv tflint /usr/bin/
        curl -L "$(curl -s https://api.github.com/repos/tfsec/tfsec/releases/latest | grep -o -E "https://.+?tfsec-linux-amd64")" > tfsec && chmod +x tfsec && sudo mv tfsec /usr/local/bin/
    - uses: pre-commit/action@v2.0.0
